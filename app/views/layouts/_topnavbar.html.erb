<div class="row border-bottom">
	<nav class="navbar navbar-static-top" role="navigation" style="margin-bottom: 0">
		<div class="navbar-header">
			<span class="navbar-minimalize minimalize-styl-2 btn btn-primary "><i class="fa fa-bars"></i> </span>
		</div>
		<ul class="nav navbar-top-links">
			<%= render 'layouts/alert' %>
			<ul class="nav navbar-top-links navbar-right" style=" padding-top: 8px;">
				<li id="switch">
					<button id="switchweek"" type="button" class="btn btn-xs">Week</button>
					<button id="switchmonth" type="button" class="btn btn-xs">Month</button>
				</li>
				<li class="btn-group" style=" padding-left: 8px;">
					<div class="input-group input-daterange" style="width: 300px;">
						<input type="text" id="starttime" class="form-control">
						<div class="input-group-addon">to</div>
						<input type="text" id="endtime" class="form-control">
					</div>
				</li>
				<li>
					<button type="button" id= "submitdate" class="btn btn-sm btn-primary"> Go!</button>
				</li>
			</ul>
		</ul>
	</nav>
</div>

<script type="text/javascript">

var utc = new Date().toJSON().slice(0,10).replace(/-/g,'/');

$('#starttime').datetimepicker({
	format: 'YYYY/MM/DD',
	minDate: '2017/09/23',
	maxDate: String(utc)
});

$('#endtime').datetimepicker({
	format: 'YYYY/MM/DD',
	minDate: String(utc),
	maxDate: String(utc)
});

$('#starttime').on("dp.change", function(e) {
	$('#endtime').data("DateTimePicker").minDate(e.date);
})


<% if false %>
$('#submitdate').on('click', function () {
	event.preventDefault();
	$.ajax({
		url: '/dashboards',
		Type: 'GET',
		dataType: "json",
		data:{
				starttime: $('#starttime').data('date'),
				endtime: $('#endtime').data('date'),
			},
		success: function(data){
			$("#sparklinefansadds").sparkline([1, 2, 3], {
				type: 'line',
				width: '100%',
				height: '60',
				lineColor: '#1ab394',
				fillColor: "#ffffff"
			});
			$("#sparklinepageusers").sparkline([1, 2, 3], {
				type: 'line',
				width: '100%',
				height: '60',
				lineColor: '#1ab394',
				fillColor: "#ffffff"
			});
			$("#sparklinewebusers").sparkline([1, 2, 3], {
				type: 'line',
				width: '100%',
				height: '60',
				lineColor: '#1ab394',
				fillColor: "#ffffff"
			});
			$("#sparklinemailusers").sparkline([1, 2, 3], {
				type: 'line',
				width: '100%',
				height: '60',
				lineColor: '#1ab394',
				fillColor: "#ffffff"
			});

			var <%= dataname %> = {
				labels: <%= last7ddate %>,
				datasets: [
					{
						label: "<%= label1 %>", 
						backgroundColor: 'rgba(220, 220, 220, 0.3)',
						pointBackgroundColor: "rgba(220, 220, 220, 0.3)",
						pointBorderColor: "#fff",
						data: <%= weekdata1 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= label2 %>", 
						backgroundColor: 'rgba(26,179,148,0.5)',
						pointBorderColor: "#fff",
						data:  <%= weekdata2 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= label3 %>",
						backgroundColor: 'rgba(225,225,225,1)',
						pointBorderColor: "#fff",
						data: <%= weekrate %>,
						yAxisID: 'y-axis-2',
					}
				]
			};

			var lineOptions = {
				responsive: true,
				scales: {
					yAxes: [{
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'left',
						id: 'y-axis-1',
					}, {
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'right',
						id: 'y-axis-2',
						gridLines: {
							drawOnChartArea: false
						}
					}],
				}
			};

			new Chart(document.getElementById("<%= linechartid %>").getContext("2d"), {type: 'line', data: <%= dataname %>, options:lineOptions}); 

			var <%= dataname %> = {
				labels: <%= last7ddate %>,
				datasets: [
					{
						label: "<%= label1 %>", 
						backgroundColor: 'rgba(220, 220, 220, 0.3)',
						pointBackgroundColor: "rgba(220, 220, 220, 0.3)",
						pointBorderColor: "#fff",
						data: <%= weekdata1 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= label2 %>", 
						backgroundColor: 'rgba(26,179,148,0.5)',
						pointBorderColor: "#fff",
						data:  <%= weekdata2 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= label3 %>",
						backgroundColor: 'rgba(225,225,225,1)',
						pointBorderColor: "#fff",
						data: <%= weekrate %>,
						yAxisID: 'y-axis-2',
					}
				]
			};

			var lineOptions = {
				responsive: true,
				scales: {
					yAxes: [{
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'left',
						id: 'y-axis-1',
					}, {
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'right',
						id: 'y-axis-2',
						gridLines: {
							drawOnChartArea: false
						}
					}],
				}
			};

			new Chart(document.getElementById("<%= linechartid %>").getContext("2d"), {type: 'line', data: <%= dataname %>, options:lineOptions}); 

			var <%= dataname %> = {
				labels: <%= last7ddate %>,
				datasets: [
					{
						label: "<%= label1 %>", 
						backgroundColor: 'rgba(220, 220, 220, 0.3)',
						pointBackgroundColor: "rgba(220, 220, 220, 0.3)",
						pointBorderColor: "#fff",
						data: <%= weekdata1 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= label2 %>", 
						backgroundColor: 'rgba(26,179,148,0.5)',
						pointBorderColor: "#fff",
						data:  <%= weekdata2 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= label3 %>",
						backgroundColor: 'rgba(225,225,225,1)',
						pointBorderColor: "#fff",
						data: <%= weekrate %>,
						yAxisID: 'y-axis-2',
					}
				]
			};

			var lineOptions = {
				responsive: true,
				scales: {
					yAxes: [{
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'left',
						id: 'y-axis-1',
					}, {
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'right',
						id: 'y-axis-2',
						gridLines: {
							drawOnChartArea: false
						}
					}],
				}
			};

			new Chart(document.getElementById("<%= linechartid %>").getContext("2d"), {type: 'line', data: <%= dataname %>, options:lineOptions}); 


			var <%= dataname %> = {
				labels: ["<%= labelY1 %>", "<%= labelY2 %>", "<%= labelY3 %>", "<%= labelY4 %>", "<%= labelY5 %>"],
				datasets: [
					{
						label: "<%= labelX1 %>",
						backgroundColor: 'rgba(220, 220, 220, 1)',
						pointBorderColor: "#fff",
						data: <%= weekdata1 %>,
						yAxisID: 'y-axis-1',
					},{
						label: "<%= labelX2 %>",
						backgroundColor: 'rgba(26,179,148,0.5)',
						borderColor: "rgba(26,179,148,0.7)",
						pointBackgroundColor: "rgba(26,179,148,1)",
						pointBorderColor: "#fff",
						data: <%= weekdata2 %>,
						yAxisID: 'y-axis-2',
					},
				]
			};

			var barOptions = {
				responsive: true,
				scales: {
					yAxes: [{
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'left',
						id: 'y-axis-1',
					}, {
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'right',
						id: 'y-axis-2',
						stacked: true,
						gridLines: {
							drawOnChartArea: false
						}
					}],
				}
			};

			new Chart(document.getElementById("<%= barchartid %>").getContext("2d"), {type: 'bar', data: <%= dataname %>, options:barOptions});

			var <%= dataname %> = {
				labels: ["<%= labelY1 %>", "<%= labelY2 %>", "<%= labelY3 %>", "<%= labelY4 %>", "<%= labelY5 %>", "<%= labelY6 %>"],
				datasets: [
					{
						label: "<%= labelX1 %>",
						backgroundColor: 'rgba(220, 220, 220, 1)',
						pointBorderColor: "#fff",
						data: <%= dayrank %>,
						xAxisID: 'x-axis-1',
					},{
						label: "<%= labelX2 %>",
						backgroundColor: 'rgba(26,179,148,0.5)',
						borderColor: "rgba(26,179,148,0.7)",
						pointBackgroundColor: "rgba(26,179,148,1)",
						pointBorderColor: "#fff",
						data: <%= dayrate %>,
						xAxisID: 'x-axis-2',
					},
				]
			};

			var barOptionsh = {
				responsive: true,
				scales: {
					xAxes: [{
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'top',
						id: 'x-axis-1',
						stacked: true,
					}, {
						type: 'linear', // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance
						display: true,
						position: 'bottom',
						id: 'x-axis-2',
						stacked: true,
						gridLines: {
							drawOnChartArea: false
						}
					}],
				}
			};

			new Chart(document.getElementById("<%= barchartid %>").getContext("2d"), {type: 'horizontalBar', data: <%= dataname %>, options:barOptionsh});
		}
		event.preventDefault();
		$.ajax({
			url: '/dashboards',
			Type: 'GET',
			dataType: "json",
			data:{
				starttime: $('#starttime').data('date'),
				endtime: $('#endtime').data('date'),
			},
			success: function(data){
			}
		});
		return false;
	});
	return false;
});

<% end %>
// switch week / month
$("#switchweek").click(function() {
	$(this).siblings().removeClass('label-primary');
	$(this).addClass('label-primary');
	$(this).siblings().removeAttr("style");
	$(this).css("color","#ffffff");
	$( "#labelpagefansw" ).trigger( "click" );
	$( "#labelpageusersw" ).trigger( "click" );
	$( "#labelwebusersw" ).trigger( "click" );
	$( "#labelfansretentionw" ).trigger( "click" );
	$( "#labelwebactivityw" ).trigger( "click" );
	$( "#labelwebtrafficw" ).trigger( "click" );
	$( "#labelpageviewsw" ).trigger( "click" );
	$( "#labelpageviewspersessionw" ).trigger( "click" );
	$( "#labelavgsessiondurationw" ).trigger( "click" );
	$( "#labelpostsusersw" ).trigger( "click" );
	$( "#labelnegativeusersw" ).trigger( "click" );
	$( "#labellinkclicksw" ).trigger( "click" );
	$( "#labelfansaddsw" ).trigger( "click" );
})

$("#switchmonth").click(function() {
	$(this).siblings().removeClass('label-primary');
	$(this).addClass('label-primary');
	$(this).siblings().removeAttr("style");
	$(this).css("color","#ffffff");
	$( "#labelpagefansm" ).trigger( "click" );
	$( "#labelpageusersm" ).trigger( "click" );
	$( "#labelwebusersm" ).trigger( "click" );
	$( "#labelfansretentionm" ).trigger( "click" );
	$( "#labelwebactivitym" ).trigger( "click" );
	$( "#labelwebtrafficm" ).trigger( "click" );
	$( "#labelpageviewsm" ).trigger( "click" );
	$( "#labelpageviewspersessionm" ).trigger( "click" );
	$( "#labelavgsessiondurationm" ).trigger( "click" );
	$( "#labelpostsusersm" ).trigger( "click" );
	$( "#labelnegativeusersm" ).trigger( "click" );
	$( "#labellinkclicksm" ).trigger( "click" );
	$( "#labelfansaddsm" ).trigger( "click" );
})

// Minimalize menu
$('.navbar-minimalize').on('click', function (event) {
	console.log('toggle')
	event.preventDefault();
	$("body").toggleClass("mini-navbar");
	SmoothlyMenu();
});

</script>